[
    {
        "1":
        {
            "1": "#|Construir un algoritmo en Lisp que calcule la suma de la resta de (a – b) y (c -d), donde a, b, c y d son iguales a 3, 7, 1, 9.|#",
            "2": "definir a = 3\ndefinir b = 7\ndefinir c = 1\ndefinir d = 9\ndefinir suma = (a - b) + (c - d)\n",
            "3": "(defvar a 3)(defvar b 7)\n(defvar c 1)(defvar d 9)\n(defvar suma (+ (- a b) (- c d)))",
            "4": 
                {
                    "1":"Asignación",
                    "2":"Suma",
                    "3":"Resta"
                },
            "5": 
                {
                    "1":"(defvar a 3)(defvar b 7)",
                    "2":"(+ (- a b) (- c d)))",
                    "3":"(- a b)"
                },
            "6": 3
        },

        "2":
        {
            "1": "#|Construir un algoritmo en Lisp que eleve el numero 8 a la potencia 3, luego dividir por (2 * 7).|#",
            "2": "definir pot = (potencia 8, 3)\ndefinir div = (pot / (2 * 7))",
            "3": "(defvar pot (expt 8 3))\n(defvar div (/ pot (* 2 7)))",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Expt",
                    "3":"Div",
                    "4":"Mult"
                },
            "5":
                {
                    "1":"(defvar pot (expt 8 3))", 
                    "2":"(expt 8 3)",
                    "3":"(/ pot (* 2 7)))",
                    "4":"(* 2 7)"
                },
            "6": 4
        },

        "3":
        {
            "1": "#|Crear un programa en Lisp que sume dos números los cuales son ingresados por consola, luego imprimir el resultado de dicha suma.|#",
            "2": "funciion Suma\n\timrpimir \"Ingrese el valor de a\"\n\tinicializar a = (valor por consola)\n\timrpimir \"Ingrese el valor de b\"\n\tinicializar b = (valor por consola)\n\timrpimir \"La suma es: \", (a + b)\n\nllamar funcion Suma",
            "3": "(defun Suma()\n\t(print \"ingrese el valor de a\")\n\t(setq a (read))\n\t(print \"ingrese el valor de b\")\n\t(setq b (read))\n\t(print \"La suma es: ~d\" (+ a b))\n)\n\n(Suma)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Impresión",
                    "3":"Lectura",
                    "4":"Llamado"
                },
            "5": 
                {
                    "1":"(defun Suma()", 
                    "2":"(print \"ingrese el valor de a\")",
                    "3":"(setq a (read))",
                    "4":"(Suma)"
                },
            "6": 4
        },

        "4":
        {
            "1": "Construir un algoritmo en Lisp que dé a conocer el precio de la leche que compro Julián, teniendo como base que el pagó 20.000 pesos por 3 litros de leche y le dieron 8.000  pesos de cambio.",
            "2": "funcion PrecioUnidad\n\tinicializar unidad = ((20000 - 8000) / 3))\n\timprimir \"El precio de la leche por unidad es de: \", unidad\n\nllamar funcion PrecioUnidad",
            "3": "(defun PrecioUnidad()\n\t(setq unidad (/ (- 20000 8000) 3))\n\t(print \"El precio de la leche por unidad es de: ~d\" unidad)\n)\n\n(PrecioUnidad)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Asignación", 
                    "3":"Impresión",
                    "4":"Resta",
                    "5":"Div"
                },
            "5": 
                {   
                    "1":"(defun PrecioUnidad()", 
                    "2":"(setq unidad (/ (- 20000 8000) 3))", 
                    "3":"(print \"El precio de la leche por unidad es de: ~d\" unidad)",
                    "4":"(- 20000 8000)",
                    "5":"(/ (- 20000 8000) 3)"
                },
            "6": 5
        },

        "5":
        {
            "1": "Construir un algoritmo en Lisp que le dé a conocer a juan el precio de la chaqueta VJT que compró por 32.000 la cual tiene un descuento del 22% y el precio del pantalón que le costó 27.500 pesos el cual tiene un descuento del 15%.",
            "2": "Funcion Costo\n\tinicializar chaqueta = (32000 - (32000 * 0.22))\n\tinicializar pantalon = (27500 - (27500 * 0.15))\n\tinicializar sum = (chaqueta + pantalon)\n\timprimir \"El precio total es de: \", sum\n\nllamar Funcion Costo",
            "3": "(defun Costo()\n\t(setq chaqueta (- 32000 (* 32000 0.22)))\n\t(setq pantalon (- 27500 (* 27500 0.15)))\n\t(setq sum (+ chaqueta pantalon))\n\t(print \"El precio total es de: ~d\" sum)\n)\n\n(Costo)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Asignación", 
                    "3":"Mult",
                    "4":"Resta",
                    "5":"Suma",
                    "6":"Impresión"
                },
            "5": 
                {
                    "1":"(defun Costo()",
                    "2":"(setq chaqueta (- 32000 (* 32000 0.22)))",
                    "3":"(* 32000 0.22)",
                    "4":"(- 32000 (* 32000 0.22))",
                    "5":"(setq sum (+ chaqueta pantalon))",
                    "6": "(print \"El precio total es de: ~d\" sum)"
                },
            "6": 6
        },

        "6":
        {
            "1": "#|Crear un algoritmo en Lisp que maneje el descuento sobre un precio que el usuario ingresa, el descuento también lo determina el usuario.|#",
            "2": "Funcion Descuentos\n\timprimir \"Ingrese el precio: \"\n\tinicializar precio = (valor por consola)\n\timprimir \"Ingrese el descuento sin el %: \"\n\tinicializar descuento = (valor por consola)\n\tinicializar finalP = (precio - (precio * (descuento / 100)))\n\nllamar Funcion Descuentos",
            "3": "(defun Descuentos()\n\t(print \"Ingrese el precio: \")\n\t(setq precio (read))\n\t(print \"Ingrese el descuento sin el %: \")\n\t(setq descuento (read))\n\t(setq finalP (- precio (* precio (/ descuento 100))))\n)\n\n(Descuentos)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Impresión",
                    "3":"Lectura",
                    "4":"Div",
                    "5":"Mult",
                    "6":"Resta",
                    "7":"Asignación"
                },
            "5": 
                {
                    "1":"(defun Descuentos()", 
                    "2":"(print \"Ingrese el precio: \")",
                    "3":"(setq precio (read))",
                    "4":"(/ descuento 100)",
                    "5":"(* precio (/ descuento 100))",
                    "6":"(- precio (* precio (/ descuento 100)))",
                    "7":"(setq finalP (- precio (* precio (/ descuento 100))))"
                },
            "6": 7
        },

        "7":
        {
            "1": "#|Crear un algoritmo en Lisp que valide si un número ingresado es par o impar.|#",
            "2": "Funcion ParImpar\n\timprimir \"Ingrese un numero: \"\n\tinicializar var = (valor por consola)\n\tsi (modulo var, 2) = 0\n\t\timprimir \"El numero es par\"\n\tsino\n\t\timprimir \"El numero es imparpar\"\n\nllamar Funcion ParImpar",
            "3": "(defun ParImpar()\n\t(print \"Ingrese un numero: \")\n\t(setq var (read))\n\t(if (eql remainder(var 2) 0)\n\t\t(print \"El numero es par\")\n\t\t(print \"El numero es imparpar\")\n\t)\n)\n\n(ParImpar)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Impresión",
                    "3":"Lectura",
                    "4":"Condicional",
                    "5":"Impresión",
                    "6":"Impresión"
                },
            "5": 
                {
                    "1":"(defun ParImpar()", 
                    "2":"(print \"Ingrese un numero: \")",
                    "3":"(setq var (read))",
                    "4":"(if (eql remainder(var 2) 0)",
                    "5":"(print \"El numero es par\")",
                    "6":"(print \"El numero es imparpar\")"
                },
            "6": 6
        },

        "8":
        {
            "1": "#|Crear un algoritmo en Lisp que capture las notas de un estudiante y determine si el estudiante aprobó la materia, se aprueba con una nota mayor a 3.0, el rango de calificación es de 0 hasta 5.|#",
            "2": "Funcion NotasEstudiante\n\timprimir \"Ingrese la nota 1: \"\n\tinicializar nota1 = (valor por consola)\n\timprimir \"Ingrese la nota 2: \"\n\tinicializar nota2 = (valor por consola)\n\timprimir \"Ingrese la nota 3: \"\n\tinicializar nota3 = (valor por consola)\n\tsi (nota1 + nota2 + nota3) > 2.9\n\t\timprimir \"Aprobó la materia\"\n\tsino\n\t\timprimir \"Reprobó la materia\"\n\nllamar Funcion NotasEstudiante",
            "3": "(defun NotasEstudiante()\n\t(print \"Ingrese la nota 1: \")\n\t(setq nota1 (read))\n\t(print \"Ingrese la nota 2: \")\n\t(setq nota2 (read))\n\t(print \"Ingrese la nota 3: \")\n\t(setq nota3 (read))\n\t(if (> (+ nota1 nota2 nota3) 2.9)\n\t\t(print \"Aprobó la materia\")\n\t\t(print \"Reprobó la materia\")\n\t)\n)\n\n(NotasEstudiante)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Impresión",
                    "3":"Lectura",
                    "4":"Condicional",
                    "5":"Impresión",
                    "6":"Impresión"
                },
            "5": 
                {
                    "1":"(defun NotasEstudiante()", 
                    "2":"(print \"Ingrese la nota 1: \")",
                    "3":"(setq nota1 (read))",
                    "4":"(if (> (+ nota1 nota2 nota3) 2.9)",
                    "5":"(print \"Aprobó la materia\")",
                    "6":"(print \"Reprobó la materia\")"
                },
            "6": 6
        },

        "9":
        {
            "1": "#|Crear un algoritmo en Lisp que lea tres números por consola e imprima solo el número mayor entre los ingresados.|#",
            "2": "Funcion mayorde3\n\timprimir \"Ingrese el primer numero: \"\n\tinicializar n1 = (valor por consola)\n\timprimir \"Ingrese el segundo numero: \"\n\tinicializar n2 = (valor por consola)\n\timprimir \"Ingrese el tercer numero: \"\n\tinicializar n3 = (valor por consola)\n\tsi n1 > n2\n\t\timprimir \"El numero mayor es: \", n1\n\tsino\n\t\tsi n2 > n3\n\t\t\timprimir \"El numero mayor es: \", n2\n\t\tsino\n\t\t\timprimir \"El numero mayor es: \", n3\n\nllamar Funcion mayorde3",
            "3": "(defun mayorde3()\n\t(print \"Ingrese el primer numero: \")\n\t(setq n1 (read))\n\t(print \"Ingrese el segundo numero: \")\n\t(setq n2 (read))\n\t(print \"Ingrese el tercer numero: \")\n\t(setq n3 (read))\n\t(if (> n1 n2)\n\t\t(print \"El numero mayor es: ~a\" n1)\n\t\t(if (> n2 n3)\n\t\t\t(print \"El numero mayor es: ~a\" n2)\n\t\t\t(print \"El numero mayor es: ~a\" n3)\n\t\t)\n\t)\n)\n\n(mayorde3)",
            "4": 
                {
                    "1":"Funcion", 
                    "2":"Impresión",
                    "3":"Lectura",
                    "4":"Condicional",
                    "5":"CondiAnidado",
                    "6":"Impresión"
                },
            "5": 
                {
                    "1":"(defun mayorde3()", 
                    "2":"(print \"Ingrese el primer numero: \")",
                    "3":"(setq n1 (read))",
                    "4":"(if (> n1 n2)",
                    "5":"(if (> n2 n3)",
                    "6":"(print \"El numero mayor es: ~a\" n2)"
                },
            "6": 6
        },

        "10":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "11":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "12":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "13":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "14":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "15":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "16":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "17":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "18":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },

        "19":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        },
        
        "20":
        {
            "1": "ejercicio",
            "2": "pseudocodigo",
            "3": "codigo",
            "4": 
                {
                    "1":"Asignación", 
                    "2":"Impresión"
                },
            "5": 
                {
                    "1":"", 
                    "2": ""
                },
            "6": 2
        }
    }
]